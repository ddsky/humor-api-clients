#import <Foundation/Foundation.h>
#import "OAIInlineResponse200.h"
#import "OAIInlineResponse2004.h"
#import "OAIInlineResponse2008.h"
#import "OAIInlineResponse2009.h"
#import "OAIApi.h"

/**
* Humor API
* Awesome Humor API.
*
* The version of the OpenAPI document: 1.0
* Contact: mail@humorapi.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/



@interface OAIJokesApi: NSObject <OAIApi>

extern NSString* kOAIJokesApiErrorDomain;
extern NSInteger kOAIJokesApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(OAIApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// Analyze Joke
/// Analyze a joke. See https://humorapi.com/docs/#Analyze-Joke for more.
///
/// @param body Post the joke as plain text. (optional)
/// 
///  code:200 message:"Successful analysis"
///
/// @return OAIInlineResponse2009*
-(NSURLSessionTask*) analyzeJokeWithBody: (NSString*) body
    completionHandler: (void (^)(OAIInlineResponse2009* output, NSError* error)) handler;


/// Downvote a Joke
/// Downvote a joke. See https://humorapi.com/docs/#Downvote-Joke for more.
///
/// @param _id The object&#39;s id.
/// 
///  code:200 message:"Successful downvote"
///
/// @return OAIInlineResponse2008*
-(NSURLSessionTask*) downvoteJokeWithId: (NSNumber*) _id
    completionHandler: (void (^)(OAIInlineResponse2008* output, NSError* error)) handler;


/// Random Joke
/// Get a random joke. See https://humorapi.com/docs/#Random-Joke for more.
///
/// @param keywords A comma separated list of keywords. (optional)
/// @param includeTags A comma separated list of tags that the joke must have. (optional)
/// @param excludeTags A comma separated list of tags that the joke must not have. (optional)
/// @param minRating The minimum rating between 0 and 10 the result should have. (optional)
/// @param maxLength The maximum number of letters in the joke. (optional)
/// 
///  code:200 message:"Random Joke Response"
///
/// @return OAIInlineResponse2004*
-(NSURLSessionTask*) randomJokeWithKeywords: (NSString*) keywords
    includeTags: (NSString*) includeTags
    excludeTags: (NSString*) excludeTags
    minRating: (NSNumber*) minRating
    maxLength: (NSNumber*) maxLength
    completionHandler: (void (^)(OAIInlineResponse2004* output, NSError* error)) handler;


/// Search Jokes
/// Search for jokes. See https://humorapi.com/docs/#Search-Jokes for more.
///
/// @param keywords A comma separated list of keywords. (optional)
/// @param includeTags A comma separated list of tags that the joke must have. (optional)
/// @param excludeTags A comma separated list of tags that the joke must not have. (optional)
/// @param number The number of results to retrieve between 1 and 10. (optional)
/// @param minRating The minimum rating between 0 and 10 the result should have. (optional)
/// @param maxLength The maximum number of letters in the joke. (optional)
/// @param offset The number of results to skip. (optional)
/// 
///  code:200 message:"Joke Search Response"
///
/// @return OAIInlineResponse200*
-(NSURLSessionTask*) searchJokesWithKeywords: (NSString*) keywords
    includeTags: (NSString*) includeTags
    excludeTags: (NSString*) excludeTags
    number: (NSNumber*) number
    minRating: (NSNumber*) minRating
    maxLength: (NSNumber*) maxLength
    offset: (NSNumber*) offset
    completionHandler: (void (^)(OAIInlineResponse200* output, NSError* error)) handler;


/// Submit Joke
/// Submit a joke. See https://humorapi.com/docs/#Submit-Joke for more.
///
/// @param body Post the joke as plain text. (optional)
/// 
///  code:200 message:"Successful submission."
///
/// @return OAIInlineResponse2008*
-(NSURLSessionTask*) submitJokeWithBody: (NSString*) body
    completionHandler: (void (^)(OAIInlineResponse2008* output, NSError* error)) handler;


/// Upvote a Joke
/// Upvote a joke. See https://humorapi.com/docs/#Upvote-Joke for more.
///
/// @param _id The object&#39;s id.
/// 
///  code:200 message:"Successful upvote"
///
/// @return OAIInlineResponse2008*
-(NSURLSessionTask*) upvoteJokeWithId: (NSNumber*) _id
    completionHandler: (void (^)(OAIInlineResponse2008* output, NSError* error)) handler;



@end
