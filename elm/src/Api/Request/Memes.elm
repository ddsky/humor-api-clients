{-
   Humor API
   Awesome Humor API.

   The version of the OpenAPI document: 1.0
   Contact: mail@humorapi.com

   NOTE: This file is auto generated by the openapi-generator.
   https://github.com/openapitools/openapi-generator.git

   DO NOT EDIT THIS FILE MANUALLY.

   For more info on generating Elm code, see https://eriktim.github.io/openapi-elm/
-}


module Api.Request.Memes exposing
    ( downvoteMeme
    , randomMeme, Mediatype(..), mediatypeVariants
    , searchMemes, Mediatype(..), mediatypeVariants
    , upvoteMeme
    )

import Api
import Api.Data exposing (..)
import Dict
import Http
import Json.Decode
import Json.Encode


type Mediatype
    = MediatypeImage
    | MediatypeVideo
    | MediatypeJpg
    | MediatypeGif
    | MediatypePng
    | MediatypeMp4


mediatypeVariants : List Mediatype
mediatypeVariants =
    [ MediatypeImage
    , MediatypeVideo
    , MediatypeJpg
    , MediatypeGif
    , MediatypePng
    , MediatypeMp4
    ]


stringFromMediatype : Mediatype -> String
stringFromMediatype model =
    case model of
        MediatypeImage ->
            "image"

        MediatypeVideo ->
            "video"

        MediatypeJpg ->
            "jpg"

        MediatypeGif ->
            "gif"

        MediatypePng ->
            "png"

        MediatypeMp4 ->
            "mp4"




type Mediatype
    = MediatypeImage
    | MediatypeVideo
    | MediatypeJpg
    | MediatypeGif
    | MediatypePng
    | MediatypeMp4


mediatypeVariants : List Mediatype
mediatypeVariants =
    [ MediatypeImage
    , MediatypeVideo
    , MediatypeJpg
    , MediatypeGif
    , MediatypePng
    , MediatypeMp4
    ]


stringFromMediatype : Mediatype -> String
stringFromMediatype model =
    case model of
        MediatypeImage ->
            "image"

        MediatypeVideo ->
            "video"

        MediatypeJpg ->
            "jpg"

        MediatypeGif ->
            "gif"

        MediatypePng ->
            "png"

        MediatypeMp4 ->
            "mp4"



{-| Downvote a meme. See https://humorapi.com/docs/#Downvote-Meme for more.
-}
downvoteMeme : Int -> Api.Request Api.Data.SubmitJoke200Response
downvoteMeme id_path =
    Api.request
        "POST"
        "/memes/{id}/downvote"
        [ ( "id", String.fromInt id_path ) ]
        []
        []
        Nothing
        Api.Data.submitJoke200ResponseDecoder


{-| Get a random meme. See https://humorapi.com/docs/#Random-Meme for more.
-}
randomMeme : Maybe String -> Maybe Bool -> Maybe Mediatype -> Maybe Int -> Maybe Int -> Api.Request Api.Data.RandomMeme200Response
randomMeme keywords_query keywordsInImage_query mediaType_query number_query minRating_query =
    Api.request
        "GET"
        "/memes/random"
        []
        [ ( "keywords", Maybe.map identity keywords_query ), ( "keywords-in-image", Maybe.map (\val -> if val then "true" else "false") keywordsInImage_query ), ( "media-type", Maybe.map stringFromMediatype mediaType_query ), ( "number", Maybe.map String.fromInt number_query ), ( "min-rating", Maybe.map String.fromInt minRating_query ) ]
        []
        Nothing
        Api.Data.randomMeme200ResponseDecoder


{-| Search for memes. See https://humorapi.com/docs/#Search-Memes for more.
-}
searchMemes : Maybe String -> Maybe Bool -> Maybe Mediatype -> Maybe Int -> Maybe Int -> Maybe Float -> Api.Request Api.Data.SearchMemes200Response
searchMemes keywords_query keywordsInImage_query mediaType_query number_query minRating_query offset_query =
    Api.request
        "GET"
        "/memes/search"
        []
        [ ( "keywords", Maybe.map identity keywords_query ), ( "keywords-in-image", Maybe.map (\val -> if val then "true" else "false") keywordsInImage_query ), ( "media-type", Maybe.map stringFromMediatype mediaType_query ), ( "number", Maybe.map String.fromInt number_query ), ( "min-rating", Maybe.map String.fromInt minRating_query ), ( "offset", Maybe.map String.fromFloat offset_query ) ]
        []
        Nothing
        Api.Data.searchMemes200ResponseDecoder


{-| Upvote a meme. See https://humorapi.com/docs/#Upvote-Meme for more.
-}
upvoteMeme : Int -> Api.Request Api.Data.SubmitJoke200Response
upvoteMeme id_path =
    Api.request
        "POST"
        "/memes/{id}/upvote"
        [ ( "id", String.fromInt id_path ) ]
        []
        []
        Nothing
        Api.Data.submitJoke200ResponseDecoder

