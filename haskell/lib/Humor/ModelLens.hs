{-
   Humor API

   Awesome Humor API.

   OpenAPI Version: 3.0.0
   Humor API API version: 1.0
   Contact: mail@humorapi.com
   Generated by OpenAPI Generator (https://openapi-generator.tech)
-}

{-|
Module : Humor.Lens
-}

{-# LANGUAGE KindSignatures #-}
{-# LANGUAGE NamedFieldPuns #-}
{-# LANGUAGE RankNTypes #-}
{-# LANGUAGE RecordWildCards #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-matches -fno-warn-unused-binds -fno-warn-unused-imports #-}

module Humor.ModelLens where

import qualified Data.Aeson as A
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (Data, Typeable)
import qualified Data.Map as Map
import qualified Data.Set as Set
import qualified Data.Time as TI

import Data.Text (Text)

import Prelude (($), (.),(<$>),(<*>),(=<<),Maybe(..),Bool(..),Char,Double,FilePath,Float,Int,Integer,String,fmap,undefined,mempty,maybe,pure,Monad,Applicative,Functor)
import qualified Prelude as P

import Humor.Model
import Humor.Core


-- * AnalyzeJoke200Response

-- | 'analyzeJoke200ResponseJoke' Lens
analyzeJoke200ResponseJokeL :: Lens_' AnalyzeJoke200Response (Text)
analyzeJoke200ResponseJokeL f AnalyzeJoke200Response{..} = (\analyzeJoke200ResponseJoke -> AnalyzeJoke200Response { analyzeJoke200ResponseJoke, ..} ) <$> f analyzeJoke200ResponseJoke
{-# INLINE analyzeJoke200ResponseJokeL #-}

-- | 'analyzeJoke200ResponseTags' Lens
analyzeJoke200ResponseTagsL :: Lens_' AnalyzeJoke200Response ([Text])
analyzeJoke200ResponseTagsL f AnalyzeJoke200Response{..} = (\analyzeJoke200ResponseTags -> AnalyzeJoke200Response { analyzeJoke200ResponseTags, ..} ) <$> f analyzeJoke200ResponseTags
{-# INLINE analyzeJoke200ResponseTagsL #-}



-- * GenerateNonsenseWord200Response

-- | 'generateNonsenseWord200ResponseWord' Lens
generateNonsenseWord200ResponseWordL :: Lens_' GenerateNonsenseWord200Response (Text)
generateNonsenseWord200ResponseWordL f GenerateNonsenseWord200Response{..} = (\generateNonsenseWord200ResponseWord -> GenerateNonsenseWord200Response { generateNonsenseWord200ResponseWord, ..} ) <$> f generateNonsenseWord200ResponseWord
{-# INLINE generateNonsenseWord200ResponseWordL #-}

-- | 'generateNonsenseWord200ResponseRating' Lens
generateNonsenseWord200ResponseRatingL :: Lens_' GenerateNonsenseWord200Response (Double)
generateNonsenseWord200ResponseRatingL f GenerateNonsenseWord200Response{..} = (\generateNonsenseWord200ResponseRating -> GenerateNonsenseWord200Response { generateNonsenseWord200ResponseRating, ..} ) <$> f generateNonsenseWord200ResponseRating
{-# INLINE generateNonsenseWord200ResponseRatingL #-}



-- * Praise200Response

-- | 'praise200ResponseText' Lens
praise200ResponseTextL :: Lens_' Praise200Response (Text)
praise200ResponseTextL f Praise200Response{..} = (\praise200ResponseText -> Praise200Response { praise200ResponseText, ..} ) <$> f praise200ResponseText
{-# INLINE praise200ResponseTextL #-}



-- * RandomJoke200Response

-- | 'randomJoke200ResponseId' Lens
randomJoke200ResponseIdL :: Lens_' RandomJoke200Response (Int)
randomJoke200ResponseIdL f RandomJoke200Response{..} = (\randomJoke200ResponseId -> RandomJoke200Response { randomJoke200ResponseId, ..} ) <$> f randomJoke200ResponseId
{-# INLINE randomJoke200ResponseIdL #-}

-- | 'randomJoke200ResponseJoke' Lens
randomJoke200ResponseJokeL :: Lens_' RandomJoke200Response (Text)
randomJoke200ResponseJokeL f RandomJoke200Response{..} = (\randomJoke200ResponseJoke -> RandomJoke200Response { randomJoke200ResponseJoke, ..} ) <$> f randomJoke200ResponseJoke
{-# INLINE randomJoke200ResponseJokeL #-}



-- * RandomMeme200Response

-- | 'randomMeme200ResponseId' Lens
randomMeme200ResponseIdL :: Lens_' RandomMeme200Response (Int)
randomMeme200ResponseIdL f RandomMeme200Response{..} = (\randomMeme200ResponseId -> RandomMeme200Response { randomMeme200ResponseId, ..} ) <$> f randomMeme200ResponseId
{-# INLINE randomMeme200ResponseIdL #-}

-- | 'randomMeme200ResponseUrl' Lens
randomMeme200ResponseUrlL :: Lens_' RandomMeme200Response (Text)
randomMeme200ResponseUrlL f RandomMeme200Response{..} = (\randomMeme200ResponseUrl -> RandomMeme200Response { randomMeme200ResponseUrl, ..} ) <$> f randomMeme200ResponseUrl
{-# INLINE randomMeme200ResponseUrlL #-}

-- | 'randomMeme200ResponseType' Lens
randomMeme200ResponseTypeL :: Lens_' RandomMeme200Response (Text)
randomMeme200ResponseTypeL f RandomMeme200Response{..} = (\randomMeme200ResponseType -> RandomMeme200Response { randomMeme200ResponseType, ..} ) <$> f randomMeme200ResponseType
{-# INLINE randomMeme200ResponseTypeL #-}



-- * RateWord200Response

-- | 'rateWord200ResponseRating' Lens
rateWord200ResponseRatingL :: Lens_' RateWord200Response (Double)
rateWord200ResponseRatingL f RateWord200Response{..} = (\rateWord200ResponseRating -> RateWord200Response { rateWord200ResponseRating, ..} ) <$> f rateWord200ResponseRating
{-# INLINE rateWord200ResponseRatingL #-}



-- * SearchGifs200Response

-- | 'searchGifs200ResponseImages' Lens
searchGifs200ResponseImagesL :: Lens_' SearchGifs200Response ([SearchGifs200ResponseImagesInner])
searchGifs200ResponseImagesL f SearchGifs200Response{..} = (\searchGifs200ResponseImages -> SearchGifs200Response { searchGifs200ResponseImages, ..} ) <$> f searchGifs200ResponseImages
{-# INLINE searchGifs200ResponseImagesL #-}



-- * SearchGifs200ResponseImagesInner

-- | 'searchGifs200ResponseImagesInnerUrl' Lens
searchGifs200ResponseImagesInnerUrlL :: Lens_' SearchGifs200ResponseImagesInner (Text)
searchGifs200ResponseImagesInnerUrlL f SearchGifs200ResponseImagesInner{..} = (\searchGifs200ResponseImagesInnerUrl -> SearchGifs200ResponseImagesInner { searchGifs200ResponseImagesInnerUrl, ..} ) <$> f searchGifs200ResponseImagesInnerUrl
{-# INLINE searchGifs200ResponseImagesInnerUrlL #-}

-- | 'searchGifs200ResponseImagesInnerWidth' Lens
searchGifs200ResponseImagesInnerWidthL :: Lens_' SearchGifs200ResponseImagesInner (Int)
searchGifs200ResponseImagesInnerWidthL f SearchGifs200ResponseImagesInner{..} = (\searchGifs200ResponseImagesInnerWidth -> SearchGifs200ResponseImagesInner { searchGifs200ResponseImagesInnerWidth, ..} ) <$> f searchGifs200ResponseImagesInnerWidth
{-# INLINE searchGifs200ResponseImagesInnerWidthL #-}

-- | 'searchGifs200ResponseImagesInnerHeight' Lens
searchGifs200ResponseImagesInnerHeightL :: Lens_' SearchGifs200ResponseImagesInner (Int)
searchGifs200ResponseImagesInnerHeightL f SearchGifs200ResponseImagesInner{..} = (\searchGifs200ResponseImagesInnerHeight -> SearchGifs200ResponseImagesInner { searchGifs200ResponseImagesInnerHeight, ..} ) <$> f searchGifs200ResponseImagesInnerHeight
{-# INLINE searchGifs200ResponseImagesInnerHeightL #-}



-- * SearchJokes200Response

-- | 'searchJokes200ResponseJokes' Lens
searchJokes200ResponseJokesL :: Lens_' SearchJokes200Response ([SearchJokes200ResponseJokesInner])
searchJokes200ResponseJokesL f SearchJokes200Response{..} = (\searchJokes200ResponseJokes -> SearchJokes200Response { searchJokes200ResponseJokes, ..} ) <$> f searchJokes200ResponseJokes
{-# INLINE searchJokes200ResponseJokesL #-}



-- * SearchJokes200ResponseJokesInner

-- | 'searchJokes200ResponseJokesInnerId' Lens
searchJokes200ResponseJokesInnerIdL :: Lens_' SearchJokes200ResponseJokesInner (Int)
searchJokes200ResponseJokesInnerIdL f SearchJokes200ResponseJokesInner{..} = (\searchJokes200ResponseJokesInnerId -> SearchJokes200ResponseJokesInner { searchJokes200ResponseJokesInnerId, ..} ) <$> f searchJokes200ResponseJokesInnerId
{-# INLINE searchJokes200ResponseJokesInnerIdL #-}

-- | 'searchJokes200ResponseJokesInnerJoke' Lens
searchJokes200ResponseJokesInnerJokeL :: Lens_' SearchJokes200ResponseJokesInner (Text)
searchJokes200ResponseJokesInnerJokeL f SearchJokes200ResponseJokesInner{..} = (\searchJokes200ResponseJokesInnerJoke -> SearchJokes200ResponseJokesInner { searchJokes200ResponseJokesInnerJoke, ..} ) <$> f searchJokes200ResponseJokesInnerJoke
{-# INLINE searchJokes200ResponseJokesInnerJokeL #-}



-- * SearchMemes200Response

-- | 'searchMemes200ResponseMemes' Lens
searchMemes200ResponseMemesL :: Lens_' SearchMemes200Response ([SearchMemes200ResponseMemesInner])
searchMemes200ResponseMemesL f SearchMemes200Response{..} = (\searchMemes200ResponseMemes -> SearchMemes200Response { searchMemes200ResponseMemes, ..} ) <$> f searchMemes200ResponseMemes
{-# INLINE searchMemes200ResponseMemesL #-}



-- * SearchMemes200ResponseMemesInner

-- | 'searchMemes200ResponseMemesInnerId' Lens
searchMemes200ResponseMemesInnerIdL :: Lens_' SearchMemes200ResponseMemesInner (Int)
searchMemes200ResponseMemesInnerIdL f SearchMemes200ResponseMemesInner{..} = (\searchMemes200ResponseMemesInnerId -> SearchMemes200ResponseMemesInner { searchMemes200ResponseMemesInnerId, ..} ) <$> f searchMemes200ResponseMemesInnerId
{-# INLINE searchMemes200ResponseMemesInnerIdL #-}

-- | 'searchMemes200ResponseMemesInnerUrl' Lens
searchMemes200ResponseMemesInnerUrlL :: Lens_' SearchMemes200ResponseMemesInner (Text)
searchMemes200ResponseMemesInnerUrlL f SearchMemes200ResponseMemesInner{..} = (\searchMemes200ResponseMemesInnerUrl -> SearchMemes200ResponseMemesInner { searchMemes200ResponseMemesInnerUrl, ..} ) <$> f searchMemes200ResponseMemesInnerUrl
{-# INLINE searchMemes200ResponseMemesInnerUrlL #-}

-- | 'searchMemes200ResponseMemesInnerType' Lens
searchMemes200ResponseMemesInnerTypeL :: Lens_' SearchMemes200ResponseMemesInner (Text)
searchMemes200ResponseMemesInnerTypeL f SearchMemes200ResponseMemesInner{..} = (\searchMemes200ResponseMemesInnerType -> SearchMemes200ResponseMemesInner { searchMemes200ResponseMemesInnerType, ..} ) <$> f searchMemes200ResponseMemesInnerType
{-# INLINE searchMemes200ResponseMemesInnerTypeL #-}



-- * SubmitJoke200Response

-- | 'submitJoke200ResponseMessage' Lens
submitJoke200ResponseMessageL :: Lens_' SubmitJoke200Response (Text)
submitJoke200ResponseMessageL f SubmitJoke200Response{..} = (\submitJoke200ResponseMessage -> SubmitJoke200Response { submitJoke200ResponseMessage, ..} ) <$> f submitJoke200ResponseMessage
{-# INLINE submitJoke200ResponseMessageL #-}


