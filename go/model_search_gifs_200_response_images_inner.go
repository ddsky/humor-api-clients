/*
Humor API

Awesome Humor API.

API version: 1.0
Contact: mail@humorapi.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package humorapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SearchGifs200ResponseImagesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SearchGifs200ResponseImagesInner{}

// SearchGifs200ResponseImagesInner struct for SearchGifs200ResponseImagesInner
type SearchGifs200ResponseImagesInner struct {
	Url string `json:"url"`
	Width int32 `json:"width"`
	Height int32 `json:"height"`
}

type _SearchGifs200ResponseImagesInner SearchGifs200ResponseImagesInner

// NewSearchGifs200ResponseImagesInner instantiates a new SearchGifs200ResponseImagesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchGifs200ResponseImagesInner(url string, width int32, height int32) *SearchGifs200ResponseImagesInner {
	this := SearchGifs200ResponseImagesInner{}
	this.Url = url
	this.Width = width
	this.Height = height
	return &this
}

// NewSearchGifs200ResponseImagesInnerWithDefaults instantiates a new SearchGifs200ResponseImagesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchGifs200ResponseImagesInnerWithDefaults() *SearchGifs200ResponseImagesInner {
	this := SearchGifs200ResponseImagesInner{}
	return &this
}

// GetUrl returns the Url field value
func (o *SearchGifs200ResponseImagesInner) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *SearchGifs200ResponseImagesInner) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *SearchGifs200ResponseImagesInner) SetUrl(v string) {
	o.Url = v
}

// GetWidth returns the Width field value
func (o *SearchGifs200ResponseImagesInner) GetWidth() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Width
}

// GetWidthOk returns a tuple with the Width field value
// and a boolean to check if the value has been set.
func (o *SearchGifs200ResponseImagesInner) GetWidthOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Width, true
}

// SetWidth sets field value
func (o *SearchGifs200ResponseImagesInner) SetWidth(v int32) {
	o.Width = v
}

// GetHeight returns the Height field value
func (o *SearchGifs200ResponseImagesInner) GetHeight() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Height
}

// GetHeightOk returns a tuple with the Height field value
// and a boolean to check if the value has been set.
func (o *SearchGifs200ResponseImagesInner) GetHeightOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Height, true
}

// SetHeight sets field value
func (o *SearchGifs200ResponseImagesInner) SetHeight(v int32) {
	o.Height = v
}

func (o SearchGifs200ResponseImagesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SearchGifs200ResponseImagesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["url"] = o.Url
	toSerialize["width"] = o.Width
	toSerialize["height"] = o.Height
	return toSerialize, nil
}

func (o *SearchGifs200ResponseImagesInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"url",
		"width",
		"height",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSearchGifs200ResponseImagesInner := _SearchGifs200ResponseImagesInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSearchGifs200ResponseImagesInner)

	if err != nil {
		return err
	}

	*o = SearchGifs200ResponseImagesInner(varSearchGifs200ResponseImagesInner)

	return err
}

type NullableSearchGifs200ResponseImagesInner struct {
	value *SearchGifs200ResponseImagesInner
	isSet bool
}

func (v NullableSearchGifs200ResponseImagesInner) Get() *SearchGifs200ResponseImagesInner {
	return v.value
}

func (v *NullableSearchGifs200ResponseImagesInner) Set(val *SearchGifs200ResponseImagesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchGifs200ResponseImagesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchGifs200ResponseImagesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchGifs200ResponseImagesInner(val *SearchGifs200ResponseImagesInner) *NullableSearchGifs200ResponseImagesInner {
	return &NullableSearchGifs200ResponseImagesInner{value: val, isSet: true}
}

func (v NullableSearchGifs200ResponseImagesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchGifs200ResponseImagesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


