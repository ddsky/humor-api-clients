/**
 * Humor API
 * Awesome Humor API.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: mail@humorapi.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAnalyze_joke_200_response.h
 *
 * 
 */

#ifndef OAIAnalyze_joke_200_response_H
#define OAIAnalyze_joke_200_response_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAnalyze_joke_200_response : public OAIObject {
public:
    OAIAnalyze_joke_200_response();
    OAIAnalyze_joke_200_response(QString json);
    ~OAIAnalyze_joke_200_response() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getJoke() const;
    void setJoke(const QString &joke);
    bool is_joke_Set() const;
    bool is_joke_Valid() const;

    QList<QString> getTags() const;
    void setTags(const QList<QString> &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_joke;
    bool m_joke_isSet;
    bool m_joke_isValid;

    QList<QString> m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAnalyze_joke_200_response)

#endif // OAIAnalyze_joke_200_response_H
